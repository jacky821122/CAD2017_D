#include "resetgenerator.h"
#include <sstream>

using namespace std;

string resetGenerator(string &dec)
{
	string reset, id;
	// stringstream ssid;
	// ssid << asser.id;
	// ssid >> id;
	dec.insert(dec.find("parameter"), "reg r");
	// dec.insert(dec.find("parameter"), id);
	dec.insert(dec.find("parameter"), "; //Generated by [ RESET ]\n");
	dec.insert(dec.find("parameter"), "reg [1:0] rp");
	// dec.insert(dec.find("parameter"), id);
	dec.insert(dec.find("parameter"), ", ");
	dec.insert(dec.find("parameter"), "rn");
	// dec.insert(dec.find("parameter"), id);
	dec.insert(dec.find("parameter"), "; //Generated by [ RESET ]\n");

	reset.append("always @(*) begin\n");
	reset.append("    case(rp");/*reset.append(id)*/;reset.append(")\n");
	reset.append("    S0: case(rst)\n");
	reset.append("        1'b0: begin rn");/*reset.append(id)*/;reset.append("=S1; r");/*reset.append(id)*/;reset.append("=0; end\n");
	reset.append("        1'b1: begin rn");/*reset.append(id)*/;reset.append("=S0; r");/*reset.append(id)*/;reset.append("=0; end\n");
	reset.append("        endcase\n");
	reset.append("    S1: case(rst)\n");
	reset.append("        1'b0: begin rn");/*reset.append(id)*/;reset.append("=S1; r");/*reset.append(id)*/;reset.append("=0; end\n");
	reset.append("        1'b1: begin rn");/*reset.append(id)*/;reset.append("=S2; r");/*reset.append(id)*/;reset.append("=1; end\n");
	reset.append("        endcase\n");
	reset.append("    S2: case(rst)\n");
	reset.append("        1'b0: begin rn");/*reset.append(id)*/;reset.append("=S1; r");/*reset.append(id)*/;reset.append("=0; end\n");
	reset.append("        1'b1: begin rn");/*reset.append(id)*/;reset.append("=S2; r");/*reset.append(id)*/;reset.append("=0; end\n");
	reset.append("        endcase\n");
	reset.append("    S3: begin rn");/*reset.append(id)*/;reset.append("=S3; r");/*reset.append(id)*/;reset.append("=0; end\n");
	reset.append("    endcase\n");
	reset.append("end\n\n");

	return reset;
}
